name: Build and Package Dependencies

on:
  workflow_dispatch:  # 手动触发
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 22.18.0
      uses: actions/setup-node@v4
      with:
        node-version: '22.18.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build project
      run: npm run build  # 如果项目有构建步骤
      
    - name: Create node_modules archive
      run: |
        tar -czf node_modules-${{ github.sha }}.tar.gz node_modules/
        
    - name: Upload node_modules artifact
      uses: actions/upload-artifact@v4
      with:
        name: node_modules-${{ github.sha }}
        path: node_modules-${{ github.sha }}.tar.gz
        retention-days: 30
        
    - name: Create release with node_modules
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: deps-${{ github.sha }}
        release_name: Dependencies Package - ${{ github.sha }}
        body: |
          This release contains the complete node_modules directory for bolt.diy project.
          Node.js version: 22.18.0
          Commit: ${{ github.sha }}
        draft: false
        prerelease: false
        
    - name: Upload release asset
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./node_modules-${{ github.sha }}.tar.gz
        asset_name: node_modules-${{ github.sha }}.tar.gz
        asset_content_type: application/gzip
